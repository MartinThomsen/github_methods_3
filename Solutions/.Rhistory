politeness <- read.csv('politeness.csv') ## read in data
library(readr)
politeness <- read_csv("~/Uni/7 semester/Multilevel statistical modeling and machine learning/github_methods_3/week_02/politeness.csv")
View(politeness)
# Politeness file imported
summary(politeness)
typeof(politeness)
# Subject, gender and attitude are characters
# Scenario, total_duration, f0mn, hiss_count are all doubles
typeof(politeness$subject)
# Subject, gender and attitude are characters
# Scenario, total_duration, f0mn, hiss_count are all doubles
typeof(politeness$scenario)
```{r setup, include=FALSE}
```{r setup, include=FALSE}
get wd
get(wd)
knitr::opts_chunk$set(echo = TRUE)
politeness <- read.csv('politeness.csv') ## read in data
politeness <- read.csv('politeness.csv')
read.csv('politeness.csv')
knitr::opts_chunk$set(echo = TRUE)
politeness <- read.csv('~/Uni/7 semester/Multilevel statistical modeling and machine learning/github_methods_3/week_02/politeness.csv') ## read in data
politeness$subject
factor(politeness$gender)
politeness$gender<- factor(politeness$gender)
politeness$gender
politeness$scenario
politeness@total_duration
politeness$total_duration
df.F1 <- data.frame(politeness$subject == '_F1_)
df.F1 <- data.frame(politeness$subject == '_F1_')
df.F1 <- data.frame(politeness$subject == "_F1_")
df.F1
df.F1 <- data.frame(politeness[politeness$subject == "_F1_"])
df.F1 <- data.frame(politeness[politeness$subject == "F1"])
df.F1 <- data.frame(politeness$subject == "F1")
```{r}
df.F1 <- filter(politeness, subject == "F1")
knitr::opts_chunk$set(echo = TRUE)
politeness <- read.csv('~/Uni/7 semester/Multilevel statistical modeling and machine learning/github_methods_3/week_02/politeness.csv') ## read in data
politeness$gender<- factor(politeness$gender)
politeness$attitude<- factor(politeness$attitude)
df.F1 <- filter(politeness, subject == "F1")
df.F1 <- filter(politeness, politeness$subject == "F1")
df.F1 <- politeness[politeness$subject == "F1"]
df.F1 <- politeness[politeness$subject == "F1"]
subjectF1 <- filter(politeness, subject == "F1")
subjectF1 <- filter(politeness, politeness$subject == "F1")
df.F1 <- politeness[(politeness["subject"] == "F1")]
install.packages("dplyr")
df.F1 <- filter(politeness, subject = "F1")
F1 <- filter(politeness, subject = "F1")
F1 <- filter(politeness, subject = "F1")
library(dplyr)
F1 <- filter(politeness, subject = "F1")
politeness$subject
F1 <- filter(politeness, subject = "F1")
F1 <- filter(politeness, subject == "F1")
knitr::opts_chunk$set(echo = TRUE)
politeness <- read.csv('~/Uni/7 semester/Multilevel statistical modeling and machine learning/github_methods_3/week_02/politeness.csv') ## read in data
politeness$gender<- factor(politeness$gender)
politeness$attitude<- factor(politeness$attitude)
df.F1 <- data.frame(filter(politeness, subject == "F1"))
knitr::opts_chunk$set(echo = TRUE)
politeness <- read.csv('~/Uni/7 semester/Multilevel statistical modeling and machine learning/github_methods_3/week_02/politeness.csv') ## read in data
politeness$gender<- factor(politeness$gender)
politeness$attitude<- factor(politeness$attitude)
df.F1 <- data.frame(filter(politeness, subject == "F1"))
df.F1 <- data.frame(filter(politeness, subject == "F1"))
regF1_integer = lm(politeness$f0mn~politeness$scenario)
politeness$scenario <- factor(politeness$scenario)
regF1_factor = lm(politeness$f0mn~politeness$scenario)
summary(regF1_integer)
summary(regF1_factor)
knitr::opts_chunk$set(echo = TRUE)
politeness <- read.csv('~/MLSMML/github_methods_3/week_02/politeness.csv')
knitr::opts_chunk$set(echo = TRUE)
politeness <- read.csv('~/MLSMML/github_methods_3/week_02/politeness.csv')
knitr::opts_chunk$set(echo = TRUE)
politeness <- read.csv('/MLSMML/github_methods_3/week_02/politeness.csv')
knitr::opts_chunk$set(echo = TRUE)
politeness <- read.csv('C:/Users/Bruger/Documents/Uni/7 semester/Multilevel statistical modeling and machine learning/github_methods_3/week_02/politeness.csv')
## read in data
library(dplyr)
library(lme4)
library(tidyverse)
library(car)
politeness=na.omit(politeness)
politeness$gender<- factor(politeness$gender)
politeness$attitude<- factor(politeness$attitude)
df.F1 <- data.frame(filter(politeness, subject == "F1"))
regF1_integer = lm(f0mn~scenario, data = df.F1)
df.F1$scenario_factor <- factor(df.F1$scenario)
regF1_factor = lm(f0mn~scenario_factor, df.F1)
print(summary(regF1_integer))
print(summary(regF1_factor))
model.matrix(regF1_factor, data = df.F1)
model.matrix(regF1_integer, data = df.F1)
ggplot(data = politeness, aes(x = scenario, y = f0mn, color = attitude)) +
geom_point() +
facet_wrap(~subject)
single_Model <- lm(f0mn ~ gender, data = politeness)
model_intercept_scenario <- lmer(f0mn ~ gender + (1|scenario), data = politeness)
model_intercept_subject <- lmer(f0mn ~ gender + (1|subject), data = politeness)
twoLevel_Model <- lmer(f0mn ~ gender + (1|scenario) + (1|subject), data = politeness)
tibble(sigma(single_Model), sigma(model_intercept_scenario), sigma(model_intercept_subject), sigma(twoLevel_Model))
AIC(single_Model,model_intercept_scenario, model_intercept_subject, twoLevel_Model)
df.Subset = politeness %>%
group_by(subject, gender)%>%
summarise(base_pitch = mean(f0mn))
F1_Model = lm(base_pitch~gender, data = df.Subset)
par(qqPlot(single_Model), qqPlot(F1_Model))
tibble(sigma(single_Model), sigma(F1_Model))
qqPlot(resid(twoLevel_Model))
hist(resid(twoLevel_Model))
fixedEffect = fixef(twoLevel_Model)
randomEffect = ranef(twoLevel_Model)
fixedEffect
randomEffect
ggplot(data = politeness, aes(x = scenario, y = f0mn, color = attitude)) +
geom_point() +
geom_point(aes(x = scenario, y = fitted(twoLevel_Model)), color = "black", shape = 18)+
facet_wrap(~subject)+
theme_bw()
attitude_Model <- lmer(f0mn ~ gender + attitude + (1|scenario) + (1|subject), data = politeness, REML = FALSE)
summary(attitude_Model)
full_Model <- lmer(f0mn ~ gender * attitude + (1|scenario) + (1|subject), data = politeness, REML = FALSE)
summary(full_Model)
anova(twoLevel_Model, attitude_Model, full_Model)
qqnorm(resid(attitude_Model))
hist(resid(attitude_Model))
View(F1_Model)
summary(F1_Model)
par(qqPlot(single_Model), qqPlot(F1_Model))
tibble(sigma(single_Model), sigma(F1_Model))
summary(twoLevel_Model)
qqPlot(resid(twoLevel_Model))
# hist(resid(twoLevel_Model))
#qqnorm(resid(attitude_Model)) %>%
attitude_Model%>%resid()%>%qqnorm()
# hist(resid(attitude_Model))
# WHY HISTOGRAM?
type(politeness)
